.button-color(@color) {
  .background-flat(@color);

  border-color: @color;
  font-weight: 600;
  font-size: 15px;

  &:hover {
    background-color: darken(@color, 5%);
  }
}

.button {
  @-borderWidth: 1px;
  @-lineHeight: 20px;
  @-paddingTB: @input-height - @-lineHeight - (@-borderWidth * 2);
  @-paddingTop: floor(@-paddingTB / 2);

  .background-flat(white);
  border: @-borderWidth solid @color-border;
  border-radius: 2px;
  box-sizing: border-box;
  color: @color-link-dark;
  cursor: pointer;
  display: inline-block;
  font-weight: 700;
  max-width: 100%;
  min-height: @input-height;
  line-height: @-lineHeight;
  margin: 0;
  padding: @-paddingTop 20px (@-paddingTB - @-paddingTop) 20px;
  text-align: center;
  transition: background-color @time-fast;
  vertical-align: middle;

  &:hover {
    background-color: @color-heading;
    text-decoration: none;
    transition: none;
  }
}

.button-extraLarge {
  font-size: 19.5px;
  height: 39px;
  line-height: 29px;
}

.button-group {
  &:extend(.inputLike);

  display: inline-block;
  list-style-type: none;
  margin-bottom: 5px;
  margin-left: 0;
  overflow: hidden;
  //extend inputLike is overriding padding?
  padding: 0 !important;
  text-align: right;

  li {
    float: left;
    height: @input-height;
    line-height: @input-height;
    padding: 0 10px;
    white-space: nowrap;
    &:not(:last-child) {
      border-right: 1px solid @color-border;
    }
    &.selected {
      background: @color-heading;
      a {
        font-weight: bold;
        color: black;
      }
    }
  }
}

.actions,
.buttons {
  border-top: 1px solid fade(black, 21%);
  margin: 20px 0;
  overflow: hidden;
  padding: 20px 0 0 0;

  .action,
  .button,
  .link,
  button {
    margin-right: 10px;
    white-space: nowrap;
  }

  .action-pullRight,
  [name='action-delete'] {
    float: right;
    margin-left: 10px;
    margin-right: 0;
  }
}

.inputLike {
  @-borderWidth: 1px;
  @-paddingTB: @input-height - @lineHeight-default - (@-borderWidth * 2);
  @-paddingTop: floor(@-paddingTB / 2);

  .background-flat(white);
  border: @-borderWidth solid @color-border;
  border-radius: 2px;
  box-sizing: border-box;
  min-height: @input-height;
  padding: @-paddingTop 6px (@-paddingTB - @-paddingTop) 6px;
  transition: border-color @time-fast, box-shadow @time-fast;

  &:hover,
  &.state-hover {
    background-color: white;
  }

  &:focus,
  &.state-focus {
    background-color: mix(@color-focus, white, 10%);
    border-color: mix(@color-focus, white, 50%);
    transition: none;

    .noToolUser & {
      background-color: white;
    }
  }

  &[disabled],
  &.state-disabled {
    border-color: mix(@color-border, white, 50%);
  }
}

.input {
  &:extend(.inputLike all);

  display: inline-block;
  line-height: @lineHeight-default;
  margin: 0;
  vertical-align: middle;
  white-space: pre-wrap;
}

.inputContainer {
  margin: 0 0 10px 0;
  min-height: 30px;
  position: relative;

  &:before {
    background-color: @color-heading;
    border-radius: 2px;
    bottom: 0;
    content: '';
    left: 0;
    position: absolute;
    top: 0;
    width: 140px;

    .noToolUser & {
      display: none;
    }
  }

  // Most reliable way to clear floats and avoid margin collapse after the input container
  // As described here: https://css-tricks.com/snippets/css/clear-fix/
  &:after {
    content: '';
    display:table;
    clear:both;
  }
  
  .message {
    margin-bottom: 5px;
  }

  .message-error {
    margin-left: 145px;

    .objectInputs[max-width^='350px'] & {
      margin-left: 0;
    }
  }

  &.state-changed {
    &:before, & > .inputLabel {
      .background-flat(@color-change);
    }
  }

  &.state-focus {
    &:before, & > .inputLabel {
      .background-flat(@color-focus);
    }
  }

  // Soft validation based on suggested sizes.
  > .inputWordCount {
    border-radius: 3px;
    bottom: 6px;
    position: absolute;
    right: 6px;
  }

  > h2 {
    background-color: white;
    margin: 0 !important;
    padding: 20px 0 10px 0;
    position: relative;
  }

  .objectInputs[max-width^='350px'] &:before {
    display: none;
  }
}

.inputLabelLike {
  .background-flat(@color-heading);
  border-radius: 2px;
  box-sizing: border-box;
  color: darken(white, 70%);
  min-height: @input-height;
  padding: ((@input-height - @lineHeight-default) / 2) 10px;
}

.inputLabel {
  &:extend(.inputLabelLike all);

  float: left;
  position: relative;
  width: @inputLabel-width;

  > label {
    display: block;
    height: 100%;
    width: 100%;
  }

  .objectInputs[max-width^='350px'] & {
    display: block;
    float: none;
    margin: 0 0 5px 0;
    padding: 5px;
    width: auto;
  }
}

.inputContainer-error {
  margin-left: 145px;
}

.contentDiff-sideBySide .objectInputs,
.inputContainer-pending,
.inputContainer-readOnly,
.inputContainer-updated {
  opacity: 0.6;
  pointer-events: none;

  .inputPending a,
  .inputUpdated a,
  .objectId-edit,
  .repeatableLabel,
  .tabs,
  .tabs-wrapper {
    pointer-events: auto;
  }

  .objectId-clear {
    display: none !important;
  }

  .repeatableForm,
  .repeatableObjectId {
    > .addButtonContainer,
    .removeButton {
      display: none !important;
    }
  }
}

.contentDiff-sideBySide .objectInputs {
  opacity: 1;
}

.inputContentEditBulkOperation {
  margin-left: 140px;
  padding: 2px 2px 2px 6px;

  .objectInputs[max-width^='350px'] & {
    margin-bottom: 5px;
    margin-left: 0;
    padding-left: 2px;
  }
}

.inputSmall {
  margin-left: (@inputLabel-width + @inputLabel-marginRight);
  position: relative;

  > input[type='password'],
  > input[type='text'],
  > textarea {
    display: block;
    width: 100%;
  }

  .objectInputs[max-width^='350px'] & {
    margin-bottom: 5px;
    margin-left: 0;
    padding-left: 2px;
  }
}

.inputLargeLike {
  padding: 10px 0 0 41px;
}

.inputLarge {
  &:extend(.inputLargeLike all);

  background-color: white;
  clear: left;
  position: relative;
  z-index: 0;

  &:before {
    bottom: 10px;
    border-color: @color-heading;
    border-style: solid;
    border-width: 0 0 1px 1px;
    border-bottom-left-radius: 2px;
    content: '';
    left: 20px;
    position: absolute;
    width: 7.5px;
    top: 0;
  }

  .inputContainer.state-changed > &:before {
    border-color: @color-change;
  }

  .inputContainer.state-focus > &:before {
    border-color: @color-focus;
  }
}

.inputLayout-wrapper {
  background-color: @color-heading;
  border-radius: 2px;
  margin-bottom: 10px;
  width: 300px;
}

.inputLayout-constrain {
  position: relative;
}

.inputLayout-container {
  bottom: 5px;
  left: 5px;
  position: absolute;
  top: 5px;
  right: 5px;
}

.inputLayout-element {
  position: absolute;
}

.inputLayout-label {
  .background-flat(@color-separator);
  border-radius: 2px;
  bottom: 5px;
  cursor: pointer;
  left: 5px;
  overflow: hidden;
  padding: 5px;
  position: absolute;
  top: 5px;
  right: 5px;

  &.inputLayout-label-placeholder {
    .background-striped(@color-separator);
    cursor: default;
  }

  &.inputLayout-label-selected {
    .background-flat(@color-focus);
  }
}

.inputPending,
.inputUpdated,
.inputNote {
  display: block;
  margin-bottom: 5px;
  margin-left: (@inputLabel-width + @inputLabel-marginRight);

  .objectInputs[max-width^='350px'] & {
    margin-left: 2px;
  }
}

.inputPending,
.inputUpdated {
  .icon;
  .icon-lock;
}

.inputLabel > .icon-beaker {
  float: right;
  color: fade(@color-text, 25%);

  &:hover {
    color: fade(@color-text, 40%);
  }
}

.inputVariationControls {
  line-height: 26px;
  margin-left: 146px;
  position: relative;

  select {
    position: absolute;
    right: 0;
    top: 0;
  }
}

.inputVariation {
  margin-left: 146px;
  padding-right: 55px;
  position: relative;
}

.inputVariationLabel {
  .icon;
  .icon-beaker;

  left: 0;
  line-height: 26px;
  position: absolute;
  top: 0;

  input[type='range'] {
    margin-left: 5px;
    vertical-align: middle;
    width: 80px;
  }

  output {
    font-size: 10px;
    margin-left: 2px;
    vertical-align: middle;

    &:after {
      content: '%';
    }
  }
}

.inputVariationConversion {
  .icon;
  .icon-ok;

  line-height: 26px;
  position: absolute;
  right: 0;
  top: 0;
}

.inputContainer-listLayoutItemContainer {
  height: 100%;
  overflow: hidden;

  &.inputContainer-listLayoutItemContainer-embedded {
    position: relative;

    > .inputContainer-listLayoutItem > .inputLarge {
      bottom: 5px;
      left: 5px;
      overflow: auto;
      position: absolute;
      right: 5px;
      top: 41px;
    }
  }

  &.inputContainer-listLayoutItemContainer-embedded-expanded {
    box-shadow: 0 0 20px fade(@color-text, 50%);
    position: absolute;
  }
}

.inputContainer-listLayoutItemContainer_expand {
  .icon;
  .icon-resize-full;

  color: @color-placeholder;
  cursor: pointer;
  position: absolute;
  right: 7px;
  top: 11px;

  &:hover {
    color: @color-text;
  }

  .inputContainer-listLayoutItemContainer-embedded-expanded & {
    .icon-resize-small;
  }
}

.inputContainer-listLayoutItem {
  background: @color-heading;
  margin-bottom: -30000px;
  padding: 5px 5px 30005px 5px;

  .objectId,
  .objectId-select {
    width: 100%;
  }

  .objectId-select {
    margin-bottom: 5px;
  }

  .objectId-edit {
    margin-left: 0;
  }

  > .inputSmall {
    margin: 0;
    padding: 0 30px 5px 0;

    .select {
      width: 100%;
    }
  }

  > .inputLarge {
    padding: 5px;

    &:before {
      display: none;
    }
  }
}

.objectInputs {
  margin-bottom: -10px;
}

.searchInput {
  display: inline-block;
  position: relative;
  white-space: nowrap;

  > label {
    color: @color-placeholder;
    left: 0.7em;
    line-height: 1;
    margin-top: -0.5em;
    padding: 0 0 0 2px;
    position: absolute;
    top: 50%;
  }

  > input[type=text] {
    padding-left: 0.7em;
    padding-right: 24px;
  }

  > input[type=submit] {
    display: none;
  }

  > button {
    .icon;
    .icon-search;
    .icon-only;

    background: transparent;
    border-style: none;
    height: 100%;
    padding: 0;
    position: absolute;
    right: 0.7em;
    top: 0;
    width: 1em;

    &:hover {
      background: transparent;
    }
  }
}

@select-markerMargin: 2px;
@select-markerSize: (@fontSize-default + 2 * (@input-padding + @input-borderWidth - @select-markerMargin));

.select {
  &:extend(.input all);

  -moz-appearance: none;
  -webkit-appearance: none;
  background-image: url(icon/angle-down.svg);
  background-position: right 9px top 7px;
  background-repeat: no-repeat;
  background-size: auto 14px;
  cursor: pointer;
  display: inline-block;
  max-width: 100%;
  padding-right: 26px;
  position: relative;
  user-select: none;

  img {
    display: block;
    max-width: 100%;
  }

  &:hover {
    color: inherit;
    text-decoration: none;
  }

  &.state-disabled:before {
    display: none;
  }

  &.toBeRemoved {
    color: @color-remove;
    text-decoration: line-through;

    img {
      opacity: 0.5;
    }

    &:before {
      visibility: hidden !important;
    }
  }
}
